-- 코드를 작성해주세요
WITH FRONTEND AS (
    SELECT CODE
    FROM SKILLCODES 
    WHERE CATEGORY = 'Front End'
),
FRONTEND_DEVELOPER AS (
    SELECT D.ID
    FROM DEVELOPERS D
    JOIN FRONTEND F ON D.SKILL_CODE & F.CODE = F.CODE
    GROUP BY D.ID
),
CSHARP AS (
    SELECT CODE
    FROM SKILLCODES
    WHERE NAME = 'C#'
),
PYTHON AS (
    SELECT CODE
    FROM SKILLCODES
    WHERE NAME = 'Python'
),
A AS (
    SELECT 'A' AS GRADE, D.ID, D.EMAIL
    FROM DEVELOPERS D
    JOIN PYTHON P
    WHERE D.ID IN (SELECT ID FROM FRONTEND_DEVELOPER) AND D.SKILL_CODE & P.CODE = P.CODE
),
B AS (
    SELECT 'B' AS GRADE, D.ID, D.EMAIL
    FROM DEVELOPERS D
    JOIN CSHARP C
    WHERE D.ID NOT IN (SELECT ID FROM A) AND D.SKILL_CODE & C.CODE = C.CODE
),
C AS (
    SELECT 'C' AS GRADE, D.ID, D.EMAIL
    FROM DEVELOPERS D
    WHERE D.ID NOT IN (SELECT ID FROM A) AND D.ID NOT IN (SELECT ID FROM B) AND D.ID IN (SELECT ID FROM FRONTEND_DEVELOPER)
)

SELECT GRADE, ID, EMAIL FROM A
UNION
SELECT GRADE, ID, EMAIL FROM B
UNION
SELECT GRADE, ID, EMAIL FROM C
ORDER BY GRADE, ID

